---
apiVersion: v1
kind: Namespace
metadata:
  name: app-python
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-python
  namespace: app-python
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '5000'
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app-python
  template:
    metadata:
      labels:
        app: app-python
    spec:
      containers:
        - name: app-python
          image: ${IMAGE_NAME}
          resources:
            limits:
              memory: "200Mi"
              cpu: "1000m"
            requests:
              memory: "100Mi"
              cpu: "500m"
          ports:
            - name: httpport
              containerPort: 5000
          livenessProbe:
            httpGet:
              path: "/"
              port: 5000
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: "/"
              port: 5000
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  namespace: app-python
  name: app-python-service
spec:
  type: NodePort
  selector:
    app: app-python
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: app-python
  name: app-python-ingress
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: app-python-service
              port:
                number: 5000