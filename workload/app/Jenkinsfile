pipeline {
    agent any
    stages {

        stage('Docker Login') {
            steps {
                script {
                    def account_id = sh(returnStdout: true, script: 'aws sts get-caller-identity --query "Account" --output text')
                    def region = sh(returnStdout: true, script: "ec2-metadata --availability-zone | grep placement").replace("placement: ", "")
                    def repository  = "${account_id}.dkr.ecr.${region}.amazonaws.com"

                    echo 'Logando no ECR'
                    sh 'docker login -u AWS -p $(aws ecr get-login-password --region ${region}) ${repository}'
                }

            }
        }

        stage('Docker Build') {
            steps {
                script {
                    def account_id = sh(returnStdout: true, script: 'aws sts get-caller-identity --query "Account" --output text')
                    def region = sh(returnStdout: true, script: "ec2-metadata --availability-zone | grep placement").replace("placement: ", "")
                    def repository  = "${account_id}.dkr.ecr.${region}.amazonaws.com"
                    def git_hash = sh(returnStdout: true, script: "git rev-parse --short HEAD")
                    def image_name = '${repository}/devops_repository/app_python:${git_hash}'

                    dir('workload/app/Jenkinsfile') {
                        sh "docker build . -t '${image_name}'"
                        sh "docker push '${image_name}'"
                    }
                }
            }
        }
    }
}